# https://taskfile.dev
version: "3"

env:
  TERRAGRUNT_VERSION: "ot-1.10.3-tg-0.83.2"

tasks:
  run-image:
    cmds:
      - >
        docker run
        --tty --interactive
        --env AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
        --env AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
        --env AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
        --env AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN}
        --user $(id -u):$(id -g)
        --volume $(pwd):/data
        --rm devopsinfra/docker-terragrunt:$TERRAGRUNT_VERSION bash

  format-all:
    cmds:
      - terragrunt hclfmt
      - terraform fmt -recursive

  clean-all:
    cmds:
      - find . -type d -name ".terragrunt-cache" -prune -exec rm -rf {} \;
      - find . -type d -name ".terraform" -prune -prune -exec rm -rf {} \;
      - find . -type f -name "terraform.tfstate*" -prune -exec rm -rf {} \;

  plan-sequential:
    deps: [clean-all]
    cmds:
      - find {{.MY_TERRAGRUNT_WORKING_DIR}} -type f \( -iname "terragrunt.hcl" ! -iwholename "{{.MY_TERRAGRUNT_WORKING_DIR}}/terragrunt.hcl" \) -prune -exec sh -c 'echo "#####"; echo $(dirname "{}"); echo "#####"; terragrunt plan --terragrunt-non-interactive --terragrunt-working-dir $(dirname "{}")' \;

  apply-sequential:
    deps: [clean-all]
    cmds:
      - find {{.MY_TERRAGRUNT_WORKING_DIR}} -type f \( -iname "terragrunt.hcl" ! -iwholename "{{.MY_TERRAGRUNT_WORKING_DIR}}/terragrunt.hcl" \) -prune -exec sh -c 'echo "#####"; echo $(dirname "{}"); echo "#####"; terragrunt apply -auto-approve --terragrunt-non-interactive --terragrunt-working-dir $(dirname "{}")' \;
